package mp3_gui;


import com.jtattoo.plaf.aluminium.AluminiumLookAndFeel;
import static com.sun.org.apache.xml.internal.utils.LocaleUtility.EMPTY_STRING;
import java.awt.Image;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import java.io.File;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javazoom.jlgui.basicplayer.BasicController;
import javazoom.jlgui.basicplayer.BasicPlayerEvent;
import javazoom.jlgui.basicplayer.BasicPlayerListener;
import objects.MP3;
import static sun.audio.AudioPlayer.player;
import utils.FileUtils;
import utils.PlaylistFileFilter;
import utils.SkinUtils;
import mp3_interfaces_impl.MP3Player;

import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javazoom.jlgui.basicplayer.BasicController;
import javazoom.jlgui.basicplayer.BasicPlayerEvent;
import javazoom.jlgui.basicplayer.BasicPlayerListener;
import mp3_interfaces.PlayControlListener;
import mp3_interfaces.PlayList;
import mp3_interfaces.Player;
import mp3_interfaces_impl.MP3PlayList;
import static mp3_interfaces_impl.MP3PlayList.PLAYLIST_FILE_DESCRIPTION;
import static mp3_interfaces_impl.MP3PlayList.PLAYLIST_FILE_EXTENSION;
import mp3_interfaces_impl.MP3Player;
import static mp3_interfaces_impl.MP3Player.MP3_FILE_DESCRIPTION;
import static mp3_interfaces_impl.MP3Player.MP3_FILE_EXTESION;
import objects.MP3;
import utils.FileUtils;
import utils.PlaylistFileFilter;
import utils.SkinUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
public class StartMp3PlayerJFrame extends javax.swing.JFrame implements PlayControlListener {

    private Player player;
    private PlayList playList;

    private FileFilter playlistFileFilter = new PlaylistFileFilter(PLAYLIST_FILE_EXTENSION, PLAYLIST_FILE_DESCRIPTION);
    private FileFilter mp3FileFilter = new PlaylistFileFilter(MP3_FILE_EXTESION, MP3_FILE_DESCRIPTION);

    private static final String INPUT_SONG_NAME = "введите имя песни";
    private double posValue = 0.0; // позиция для прокрутки
    // передвигается ли ползунок песни от перетаскивания (или от проигрывания) - используется во время перемотки
    private boolean movingFromJump = false;
    private boolean moveAutomatic = true;// во время проигрывании песни ползунок передвигается, moveAutomatic = true
    
    
    private Image icon=new ImageIcon(getClass().getResource("/images/music.png")).getImage();
    
    
      @Override
    public void playStarted(String name) {
        labelSongName.setText(name);
    }

    @Override
    public void processScroll(int position) {
        if (moveAutomatic) {
            slideProgress.setValue(position);
        }
    }

    @Override
    public void playFinished() {
        playList.next();
    }

    public StartMp3PlayerJFrame() {
        initComponents();
        player = new MP3Player(this);
        playList = new MP3PlayList(lstPlayList, player);
        player.setVolume(slideVolume.getValue());
        slideVolume.setMaximum(MP3Player.MAX_VOLUME);
        super.setIconImage(icon);
    }

    private void searchSong() {
        String name = txtSearch.getText().trim();
        if (!playList.search(name)) {
            JOptionPane.showMessageDialog(this, "Поиск по строке \'" + name + "\' не дал результатов");
            txtSearch.requestFocus();
            txtSearch.selectAll();

        }

    }
    
        
     /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        popupPlaylist = new javax.swing.JPopupMenu();
        popmenuAddSong = new javax.swing.JMenuItem();
        popmenuDeleteSong = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        popmenuOpenPlaylist = new javax.swing.JMenuItem();
        popmenuClearPlaylist = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        popmenuPlaySong = new javax.swing.JMenuItem();
        popmenuStopSong = new javax.swing.JMenuItem();
        popmenuPause = new javax.swing.JMenuItem();
        panelSearch = new javax.swing.JLayeredPane();
        txtSearch = new javax.swing.JTextField();
        ButtonSearch = new javax.swing.JButton();
        panelMain = new javax.swing.JLayeredPane();
        btnAddSong = new javax.swing.JButton();
        btnDelSong = new javax.swing.JButton();
        btnSelectNext = new javax.swing.JButton();
        btnSelectPrev = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPlayList = new javax.swing.JList();
        tglbtnVolume = new javax.swing.JToggleButton();
        slideVolume = new javax.swing.JSlider();
        btnStopSong = new javax.swing.JButton();
        btnPrevSong = new javax.swing.JButton();
        btnPlaySong = new javax.swing.JButton();
        btnNextSong = new javax.swing.JButton();
        btnPauseSong = new javax.swing.JButton();
        slideProgress = new javax.swing.JSlider();
        labelSongName = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuOpenPlaylist = new javax.swing.JMenuItem();
        menuSavePlaylist = new javax.swing.JMenuItem();
        menuSeparator = new javax.swing.JPopupMenu.Separator();
        menuExit = new javax.swing.JMenuItem();
        menuPref = new javax.swing.JMenu();
        menuChangeSkin = new javax.swing.JMenu();
        menuSkin1 = new javax.swing.JMenuItem();
        menuSkin2 = new javax.swing.JMenuItem();
        menuSkin3 = new javax.swing.JMenuItem();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setCurrentDirectory(new java.io.File("C:\\Users\\User\\Desktop\\Шиленков\\web\\muzic"));
        fileChooser.setDialogTitle("Выбрать файл");
        fileChooser.setMultiSelectionEnabled(true);

        popmenuAddSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        popmenuAddSong.setText("Добавить песню");
        popmenuAddSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuAddSongActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuAddSong);

        popmenuDeleteSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.png"))); // NOI18N
        popmenuDeleteSong.setText("Удалить песню");
        popmenuDeleteSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuDeleteSongActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuDeleteSong);
        popupPlaylist.add(jSeparator1);

        popmenuOpenPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        popmenuOpenPlaylist.setText("Открыть плей-лист");
        popmenuOpenPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuOpenPlaylistActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuOpenPlaylist);

        popmenuClearPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.png"))); // NOI18N
        popmenuClearPlaylist.setText("Очистить плей-лист");
        popmenuClearPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuClearPlaylistActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuClearPlaylist);
        popupPlaylist.add(jSeparator3);

        popmenuPlaySong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play.png"))); // NOI18N
        popmenuPlaySong.setText("PLAY");
        popmenuPlaySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuPlaySongActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuPlaySong);

        popmenuStopSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop.png"))); // NOI18N
        popmenuStopSong.setText("STOP");
        popmenuStopSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuStopSongActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuStopSong);

        popmenuPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pause.png"))); // NOI18N
        popmenuPause.setText("PAUSE");
        popmenuPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popmenuPauseActionPerformed(evt);
            }
        });
        popupPlaylist.add(popmenuPause);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MP3 Player developed by Mikhail Shilenkov");
        setIconImages(null);

        panelSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelSearch.setDoubleBuffered(true);
        panelSearch.setOpaque(true);

        txtSearch.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(153, 153, 153));
        txtSearch.setToolTipText("");
        txtSearch.setName(""); // NOI18N
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        ButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-icon.png"))); // NOI18N
        ButtonSearch.setText("Найти");
        ButtonSearch.setToolTipText("Нажмите чтобы начать поиск");
        ButtonSearch.setMargin(new java.awt.Insets(2, 5, 2, 5));
        ButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchActionPerformed(evt);
            }
        });

        panelSearch.setLayer(txtSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelSearch.setLayer(ButtonSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonSearch)
                .addContainerGap())
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        panelMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAddSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnAddSong.setToolTipText("Добавить песню");
        btnAddSong.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnAddSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSongActionPerformed(evt);
            }
        });

        btnDelSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.png"))); // NOI18N
        btnDelSong.setToolTipText("Удалить песню");
        btnDelSong.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnDelSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelSongActionPerformed(evt);
            }
        });

        btnSelectNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/down.png"))); // NOI18N
        btnSelectNext.setToolTipText("Выделить следующую песню");
        btnSelectNext.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnSelectNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectNextActionPerformed(evt);
            }
        });

        btnSelectPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/up.png"))); // NOI18N
        btnSelectPrev.setToolTipText("Выделить предыдущую песню");
        btnSelectPrev.setMargin(new java.awt.Insets(2, 10, 2, 10));
        btnSelectPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectPrevActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setMinimumSize(new java.awt.Dimension(50, 5));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(275, 130));

        lstPlayList.setToolTipText("Список песен");
        lstPlayList.setComponentPopupMenu(popupPlaylist);
        lstPlayList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lstPlayList.setDragEnabled(true);
        lstPlayList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstPlayListMouseClicked(evt);
            }
        });
        lstPlayList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lstPlayListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(lstPlayList);

        tglbtnVolume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sound_on.png"))); // NOI18N
        tglbtnVolume.setToolTipText("Выкл.звук");
        tglbtnVolume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tglbtnVolume.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sound_off.png"))); // NOI18N
        tglbtnVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglbtnVolumeActionPerformed(evt);
            }
        });

        slideVolume.setMinorTickSpacing(1);
        slideVolume.setSnapToTicks(true);
        slideVolume.setToolTipText("Изменить громкость");
        slideVolume.setValue(2);
        slideVolume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        slideVolume.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideVolumeStateChanged(evt);
            }
        });

        btnStopSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stop.png"))); // NOI18N
        btnStopSong.setMaximumSize(new java.awt.Dimension(43, 43));
        btnStopSong.setMinimumSize(new java.awt.Dimension(43, 43));
        btnStopSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopSongActionPerformed(evt);
            }
        });

        btnPrevSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/skip back.png"))); // NOI18N
        btnPrevSong.setMaximumSize(new java.awt.Dimension(43, 43));
        btnPrevSong.setMinimumSize(new java.awt.Dimension(43, 43));
        btnPrevSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevSongActionPerformed(evt);
            }
        });

        btnPlaySong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play.png"))); // NOI18N
        btnPlaySong.setMaximumSize(new java.awt.Dimension(43, 43));
        btnPlaySong.setMinimumSize(new java.awt.Dimension(43, 43));
        btnPlaySong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaySongActionPerformed(evt);
            }
        });

        btnNextSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/skip forward.png"))); // NOI18N
        btnNextSong.setMaximumSize(new java.awt.Dimension(43, 43));
        btnNextSong.setMinimumSize(new java.awt.Dimension(43, 43));
        btnNextSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextSongActionPerformed(evt);
            }
        });

        btnPauseSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pause.png"))); // NOI18N
        btnPauseSong.setMaximumSize(new java.awt.Dimension(43, 43));
        btnPauseSong.setMinimumSize(new java.awt.Dimension(43, 43));
        btnPauseSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseSongActionPerformed(evt);
            }
        });

        slideProgress.setMaximum(1000);
        slideProgress.setMinorTickSpacing(1);
        slideProgress.setSnapToTicks(true);
        slideProgress.setToolTipText("прогресс воспроизведения");
        slideProgress.setValue(0);
        slideProgress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                slideProgressMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slideProgressMouseReleased(evt);
            }
        });

        labelSongName.setText("...");
        labelSongName.setToolTipText("");

        panelMain.setLayer(btnAddSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnDelSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnSelectNext, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnSelectPrev, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(tglbtnVolume, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(slideVolume, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnStopSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnPrevSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnPlaySong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnNextSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(btnPauseSong, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(slideProgress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        panelMain.setLayer(labelSongName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                        .addComponent(btnAddSong)
                        .addGap(15, 15, 15)
                        .addComponent(btnDelSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSelectNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelectPrev))
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(tglbtnVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(slideVolume, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(btnPrevSong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPlaySong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPauseSong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStopSong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNextSong, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slideProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSongName)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddSong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSelectPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSelectNext, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelSong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(slideProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(labelSongName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tglbtnVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slideVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrevSong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPlaySong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPauseSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStopSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextSong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        menuFile.setText("Файл");

        menuOpenPlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuOpenPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        menuOpenPlaylist.setText("Открыть плей лист");
        menuOpenPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenPlaylistActionPerformed(evt);
            }
        });
        menuFile.add(menuOpenPlaylist);

        menuSavePlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSavePlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        menuSavePlaylist.setText("Сохранить плей лист");
        menuSavePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSavePlaylistActionPerformed(evt);
            }
        });
        menuFile.add(menuSavePlaylist);
        menuFile.add(menuSeparator);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        menuExit.setText("Выход");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        menuFile.add(menuExit);

        jMenuBar1.add(menuFile);

        menuPref.setText("Сервис");

        menuChangeSkin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        menuChangeSkin.setText("Внешний вид");

        menuSkin1.setText("Windows");
        menuSkin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSkin1ActionPerformed(evt);
            }
        });
        menuChangeSkin.add(menuSkin1);

        menuSkin2.setText("Nimbus");
        menuSkin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSkin2ActionPerformed(evt);
            }
        });
        menuChangeSkin.add(menuSkin2);

        menuSkin3.setText("Aluminium");
        menuSkin3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSkin3ActionPerformed(evt);
            }
        });
        menuChangeSkin.add(menuSkin3);

        menuPref.add(menuChangeSkin);

        jMenuBar1.add(menuPref);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain)
            .addComponent(panelSearch)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMain))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Смена скина. Слушатель №1
    private void menuSkin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSkin1ActionPerformed

        //скин по умолчанию для операционной системы - getSystemLookAndFeelClassName
       SkinUtils.changeSkin(this, UIManager.getSystemLookAndFeelClassName());   
        
    }//GEN-LAST:event_menuSkin1ActionPerformed

    private void btnStopSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopSongActionPerformed
        
        player.stop();

    }//GEN-LAST:event_btnStopSongActionPerformed

    //Смена скина. Слушатель №2
    private void menuSkin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSkin2ActionPerformed
        
        // скин NimbusLookAndFeel
        SkinUtils.changeSkin(this, new NimbusLookAndFeel());
    }//GEN-LAST:event_menuSkin2ActionPerformed

    //Смена скина. Слушатель №3
    private void menuSkin3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSkin3ActionPerformed
        // скин AluminiumLookAndFeel
        SkinUtils.changeSkin(this, new AluminiumLookAndFeel());
    }//GEN-LAST:event_menuSkin3ActionPerformed

    private void btnAddSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSongActionPerformed
        // Задаем действие выполняемое при нажатии на кнопку
        FileUtils.addFileFilter(fileChooser, mp3FileFilter); // устанавливаем файл фильтр
        int result=fileChooser.showOpenDialog(this); //result хранит результат фыбран файл или нет
        
        if (result==JFileChooser.APPROVE_OPTION){ // если нажата клавиша OK или Yes
            playList.openFiles(fileChooser.getSelectedFiles());
       
        }

    }//GEN-LAST:event_btnAddSongActionPerformed

    private void btnPlaySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaySongActionPerformed
        
                
            playList.playFile();
        
    }//GEN-LAST:event_btnPlaySongActionPerformed

    private void btnDelSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelSongActionPerformed
       playList.delete();
    }//GEN-LAST:event_btnDelSongActionPerformed

    
    
    private void btnSelectNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectNextActionPerformed
        /*
        int nextIndex = lstPlayList.getSelectedIndex()+1; // получаем текущий индекс, переменной nextIndex присваиваем значение на ед.больше(то есть) следующее за выделенным индексом(значением)
        if (nextIndex>=0) {//если не вышли за пределы плейлиста, то
          lstPlayList.setSelectedIndex(nextIndex);// выделяем следующий индекс
          }*/
        playList.next();
    }//GEN-LAST:event_btnSelectNextActionPerformed

    private void btnSelectPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectPrevActionPerformed
        /*
        int nextIndex = lstPlayList.getSelectedIndex()-1; // получаем текущий индекс, переменной nextIndex присваиваем значение на ед.меньше(то есть) предыдущее за выделенным индексом(значением)
        if (nextIndex<=lstPlayList.getModel().getSize()-1) {//если не вышли за пределы плейлиста, то
          lstPlayList.setSelectedIndex(nextIndex);// выделяем следующий индекс
          }*/
        playList.prev();
    }//GEN-LAST:event_btnSelectPrevActionPerformed

    private void menuSavePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSavePlaylistActionPerformed
        // TODO add your handling code here:
        FileUtils.addFileFilter(fileChooser, playlistFileFilter);// добавляем фильтр диалоговому окну
        //showSaveDialog - диалоговое окно для сохранения файла
        int result = fileChooser.showSaveDialog(this); // // result хранит результат: выбран файл илил нет. когда выбрано название файла плейлиста
        if (result==JFileChooser.APPROVE_OPTION) {//если нажата клавиша ОК или YES, то
            File selectedFile=fileChooser.getSelectedFile(); // создается файл плейлиста по выбранному пути
            if (selectedFile.exists()) {//если такой файл уже существует, то выводится предупреждение
                
                int resultOvveride = JOptionPane.showConfirmDialog(this, "Файл с таким именем уже существует. Перезаписать его?", "ВНИМАНИЕ!!!", JOptionPane.YES_NO_CANCEL_OPTION);//вывод предупреждения
                switch(resultOvveride){
                    case JOptionPane.NO_OPTION:
                        menuSavePlaylistActionPerformed(evt);//если пользователь не хочет пересохранять фал, то повторно открыть окно сохранения файла (повторно вызывается метод menuSavePlaylistActionPerformed) то есть начинаем сначала
                        return;
                    case JOptionPane.CANCEL_OPTION:
                        fileChooser.cancelSelection();
                        return;
                }
               
            }
           
            fileChooser.approveSelection(); // не выполнилось NO и CANCEL, то есть пользователь согласился перезаписать файл плейлиста
            playList.savePlaylist(selectedFile);
        }
    }//GEN-LAST:event_menuSavePlaylistActionPerformed

    private void menuOpenPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenPlaylistActionPerformed
        // TODO add your handling code here:
        FileUtils.addFileFilter(fileChooser, playlistFileFilter);// добавляем фильтр диалоговому окну
        
        int result = fileChooser.showOpenDialog(this);// result хранит результат: выбран файл или нет
        if (result == JFileChooser.APPROVE_OPTION) {// если нажата клавиша OK или YES
            playList.openPlayList(fileChooser.getSelectedFile());
        }
        
    }//GEN-LAST:event_menuOpenPlaylistActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void ButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchActionPerformed
       
        searchSong();
        
        
    }//GEN-LAST:event_ButtonSearchActionPerformed

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        // TODO add your handling code here:
        if (txtSearch.getText().equals(INPUT_SONG_NAME)) {
            txtSearch.setText(EMPTY_STRING);
        }
    }//GEN-LAST:event_txtSearchFocusGained

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        // TODO add your handling code here:
        if (txtSearch.getText().trim().equals(EMPTY_STRING)) {
            txtSearch.setText(INPUT_SONG_NAME);
        }
    }//GEN-LAST:event_txtSearchFocusLost

    private void btnPauseSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseSongActionPerformed
        player.pause();
    }//GEN-LAST:event_btnPauseSongActionPerformed

    private void slideVolumeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideVolumeStateChanged
        player.setVolume(slideVolume.getValue());
        
        if (slideVolume.getValue()==0){
            tglbtnVolume.setSelected(true);
        }else {
            tglbtnVolume.setSelected(false);
        }
    }//GEN-LAST:event_slideVolumeStateChanged

    private int currentVolumeValue;
    private void tglbtnVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglbtnVolumeActionPerformed
         if (tglbtnVolume.isSelected()){
            currentVolumeValue = slideVolume.getValue();
            slideVolume.setValue(0);
        }else{
            slideVolume.setValue(currentVolumeValue);
        }
    }//GEN-LAST:event_tglbtnVolumeActionPerformed

    private void btnNextSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextSongActionPerformed
        
            playList.next();
        
    }//GEN-LAST:event_btnNextSongActionPerformed

    private void btnPrevSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevSongActionPerformed
        
            playList.prev();
        
    }//GEN-LAST:event_btnPrevSongActionPerformed

    private void lstPlayListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstPlayListMouseClicked
        // если нажали левую кнопку мыши 2 раза
        if (evt.getModifiers() == InputEvent.BUTTON1_MASK && evt.getClickCount() == 2) {
            playList.playFile();
        }
    }//GEN-LAST:event_lstPlayListMouseClicked

    private void popmenuAddSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuAddSongActionPerformed
        btnAddSongActionPerformed(evt);
    }//GEN-LAST:event_popmenuAddSongActionPerformed

    private void popmenuDeleteSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuDeleteSongActionPerformed
      btnDelSongActionPerformed(evt);
    }//GEN-LAST:event_popmenuDeleteSongActionPerformed

    private void popmenuOpenPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuOpenPlaylistActionPerformed
        menuOpenPlaylistActionPerformed(evt);
    }//GEN-LAST:event_popmenuOpenPlaylistActionPerformed

    private void popmenuClearPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuClearPlaylistActionPerformed
        playList.clear();
    }//GEN-LAST:event_popmenuClearPlaylistActionPerformed

    private void popmenuPlaySongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuPlaySongActionPerformed
        btnPlaySongActionPerformed(evt);
    }//GEN-LAST:event_popmenuPlaySongActionPerformed

    private void popmenuStopSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuStopSongActionPerformed
        btnStopSongActionPerformed(evt);
    }//GEN-LAST:event_popmenuStopSongActionPerformed

    private void popmenuPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popmenuPauseActionPerformed
        btnPauseSongActionPerformed(evt);
    }//GEN-LAST:event_popmenuPauseActionPerformed

    private void lstPlayListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstPlayListKeyPressed
    int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            playList.playFile();
        }
    }//GEN-LAST:event_lstPlayListKeyPressed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            searchSong();
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    private void slideProgressMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slideProgressMousePressed
        moveAutomatic = false;
    }//GEN-LAST:event_slideProgressMousePressed

    private void slideProgressMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slideProgressMouseReleased
        if (slideProgress.getValueIsAdjusting() == false) {
            posValue = slideProgress.getValue() * 1.0 / 1000;
            player.jump(posValue);
        }

        moveAutomatic = true;
    }//GEN-LAST:event_slideProgressMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartMp3PlayerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartMp3PlayerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartMp3PlayerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartMp3PlayerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StartMp3PlayerJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonSearch;
    private javax.swing.JButton btnAddSong;
    private javax.swing.JButton btnDelSong;
    private javax.swing.JButton btnNextSong;
    private javax.swing.JButton btnPauseSong;
    private javax.swing.JButton btnPlaySong;
    private javax.swing.JButton btnPrevSong;
    private javax.swing.JButton btnSelectNext;
    private javax.swing.JButton btnSelectPrev;
    private javax.swing.JButton btnStopSong;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel labelSongName;
    private javax.swing.JList lstPlayList;
    private javax.swing.JMenu menuChangeSkin;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuOpenPlaylist;
    private javax.swing.JMenu menuPref;
    private javax.swing.JMenuItem menuSavePlaylist;
    private javax.swing.JPopupMenu.Separator menuSeparator;
    private javax.swing.JMenuItem menuSkin1;
    private javax.swing.JMenuItem menuSkin2;
    private javax.swing.JMenuItem menuSkin3;
    private javax.swing.JLayeredPane panelMain;
    private javax.swing.JLayeredPane panelSearch;
    private javax.swing.JMenuItem popmenuAddSong;
    private javax.swing.JMenuItem popmenuClearPlaylist;
    private javax.swing.JMenuItem popmenuDeleteSong;
    private javax.swing.JMenuItem popmenuOpenPlaylist;
    private javax.swing.JMenuItem popmenuPause;
    private javax.swing.JMenuItem popmenuPlaySong;
    private javax.swing.JMenuItem popmenuStopSong;
    private javax.swing.JPopupMenu popupPlaylist;
    public static javax.swing.JSlider slideProgress;
    private javax.swing.JSlider slideVolume;
    private javax.swing.JToggleButton tglbtnVolume;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
